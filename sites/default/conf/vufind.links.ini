[analytics_city]
id = analytics_session:cityId

[analytics_country]
id = analytics_session:countryId

[analytics_device]
id = analytics_session:deviceId

[analytics_session]
id[] = analytics_search:sessionId
id[] = analytics_page_view:sessionId
id[] = analytics_event:sessionId
countryId = analytics_country:id
cityId = analytics_city:id
stateId = analytics_state:id
themeId = analytics_theme:id
deviceId = analytics_device:id
physicalLocationId = analytics_physical_location:id
patronTypeId = analytics_patron_type:id
homeLocationId = location:locationId

[analytics_page_view]
sessionId = analytics_session:id

[analytics_patron_type]
id = analytics_session:patronTypeId

[analytics_physical_location]
id = analytics_session:physicalLocationId

[analytics_search]
sessionId = analytics_session:id

[analytics_state]
id = analytics_session:stateId

[analytics_theme]
id = analytics_session:themeId

[grouped_work]
id[] = grouped_work_identifiers_ref:grouped_work_id
id[] = grouped_work_primary_identifiers:id

[grouped_work_identifiers]
id = grouped_work_identifiers_ref:identifier_id

[grouped_work_identifiers_ref]
grouped_work_id = grouped_work:id
identifier_id = grouped_work_identifiers:id

[grouped_work_primary_identifiers]
grouped_work_id = grouped_work:id

[materials_request]
createdBy = user:id
status = materials_request_status:id
holdPickupLocation = location:locationId
assignedTo = user:id
format = materials_request_formats:format
; (format needs additional where condition to filter by library ID)

[materials_request_custom_fields_data]
formFieldsId = materials_request_form_fields:id

[reindex_process_log]
reindex_id = reindex_log:id

;[resource]
;id = user_rating:resource_id

[user]
id[] = user_work_review:userId
id[] = user_roles:userId
id[] = user_staff_settings:userId
homeLocationId = location:id

[user_list_entry]
groupedWorkPermanentId[] = grouped_work:permanent_id
groupedWorkPermanentId[] = islandora_object_cache:pid
listId = user_list:id

;[user_staff_settings]
;userId = user:id

;[user_roles]
;userId = user:id
;roleId = roles:roleId

[user_not_interested]
groupedRecordPermanentId = grouped_work:permanent_id
userid = user:id

[user_work_review]
groupedRecordPermanentId = grouped_work:permanent_id
userId = user:id