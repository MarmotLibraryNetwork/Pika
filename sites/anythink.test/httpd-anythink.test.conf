# Aspencat, Arlingtion & Anythink Virtual Hosts must be defined first because their server aliases anythink.marmot.org is a subset
#   of the Marmot Virtual Hosts' server aliases *.marmot.org  If Marmot's is first, the aspencat, arlington & anythink alias is never even
#  checked and the Marmot Virtual Hosts are used.  However, when Anythink's ,Arlington's & Aspencat's Virtual Hosts are defined first their
#  server alias is checked first, and the virtual host used when there is a match.
#
# The web server accesses this file via the symbolic link
#  /etc/httpd/conf.d/3-httpd-anythink.test.conf
# (The 3 is to ensure it is processed *before* the marmot conf file.)


# Prepend Log entries with the virtual host(%v). Requires setting CustomLog directives to combinedVhost
#LogFormat "%v %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" combinedVhost

# httpd -S
# This command will output a description of how Apache parsed the configuration file.

# This statement is required for multiple Secure Server Virtual Hosts.
# It must come before any vitual host definition so that the right host can be picked.
# If apache is unable to pick one, it defaults to the first secure host defined.
# Each VirtualHost configuration needs server aliases and server name defined to pick the right secure host.
#
# See  https://wiki.apache.org/httpd/NameBasedSSLVHostsWithSNI for more.
NameVirtualHost *:443

# Enable Named-based Virtual Hosts for regular connections as well.
NameVirtualHost *:80

# Anythink Test Secure Server
<VirtualHost *:443>
  SSLEngine on
  SSLProtocol All -SSLv2 -SSLv3
  SSLCertificateFile      "/etc/pki/tls/certs/wildcard.marmot.org.crt"
  SSLCertificateKeyFile   "/etc/pki/tls/private/wildcard.marmot.org.key"
  SSLCertificateChainFile "/etc/pki/tls/certs/rapidssl.crt"

  SSLProxyEngine On
  RequestHeader  set Front-End-Https "On"
  CacheDisable   *

  ServerName anythink.marmot.org
  # Test instance on Marmot server

  DocumentRoot "/usr/local/vufind-plus/vufind/web"
  CustomLog    "/var/log/vufind-plus/anythink.test/https_access.log" combined
  ErrorLog     "/var/log/vufind-plus/anythink.test/https_error.log"
  ErrorDocument 404 /index.php?method=404
  #marmot test instance

  <Directory "/usr/local/vufind-plus/vufind/web">
    Order allow,deny
    allow from all
    AllowOverride All

    # Uncomment the following lines, if you wish to use the Shibboleth authentication
    # AuthType shibboleth
    # require shibboleth

    # Friendly URLs
    #
    # You may need to adjust the RewriteBase to match your VuFind path.
    # You can remove the line if your vufind instance will be located at the web
    # server root.
    #
    <IfModule mod_rewrite.c>
      RewriteEngine   On

      RewriteRule  ^robots\.txt$ /robots.php [NC,L]

      #Redirect anything still using /vufind to /
      RewriteCond %{THE_REQUEST} ^GET\ /vufind/
      RewriteRule ^vufind/(.*) /$1 [L,R=301]

      RewriteCond %{THE_REQUEST} ^GET\ /MyResearch/

      RewriteRule ^MyResearch/OverdriveHolds /MyAccount/Holds$1 [L,QSA,R=301]
      RewriteRule ^MyResearch/OverdriveCheckedOut /MyAccount/CheckedOut$1 [L,QSA,R=301]
      RewriteRule ^MyResearch/EContentHolds /MyAccount/Holds$1 [L,QSA,R=301]
      RewriteRule ^MyResearch/EContentCheckedOut /MyAccount/CheckedOut$1 [L,QSA,R=301]
      #included 12-8-2014, plb. taken from httpd.opac.marmot.org.conf
      RewriteRule ^MyResearch/(.*) /MyAccount/$1 [L,R=301]


      # Note: The following RewriteRule directives include the [B] flag to escape
      # backreferences.  This prevents encoding problems caused by special characters
      # like & if they show up in ids.  Note that the flag doesn't work in some
      # versions of Apache prior to 2.2.12; if you run into trouble, try upgrading.
      RewriteRule   ^(MyResearch)/([^/]+)/(.+)$   index.php?module=$1&action=$2&id=$3   [B,L,QSA]
      RewriteRule   ^(Record)/([^/]+)/(.+)$       index.php?module=$1&id=$2&action=$3   [B,L,QSA]
      RewriteRule   ^(Record)/(.+)$               index.php?module=$1&id=$2             [B,L,QSA]
      RewriteRule   ^([^/]+)/(.+)$                index.php?module=$1&action=$2         [B,L,QSA]
      RewriteRule   ^(Search)/?$                  index.php?module=$1                   [B,L,QSA]
      # above taken from httpd.opac.marmot.org.conf, below is the orignal set. plb 12-08-2014

      #RewriteRule   ^(MyAccount)/([^/]+)/(.+)$   index.php?module=$1&action=$2&id=$3   [B,L,QSA]
      #RewriteRule   ^(Record|EcontentRecord)/([^/]+)/(.+)$       index.php?module=$1&id=$2&action=$3   [B,L,QSA]
      #RewriteRule   ^(Record|EcontentRecord)/(.+)$               index.php?module=$1&id=$2             [B,L,QSA]
      #RewriteRule   ^(Search)/?$                  index.php?module=$1                   [B,L,QSA]

      ##RewriteCond   %{REQUEST_URI}    !^/?themes
      #RewriteRule   ^([^/]+)/(.+)$                index.php?module=$1&action=$2         [B,L,QSA]
    </IfModule>

    # Disable Magic Quotes
    php_value magic_quotes_gpc false

    ## Session Settings
    #php_value session.use_cookies  1
    #php_value session.use_only_cookies 1
    ## important: we want to serialize objects
    #php_value session.auto_start 0
    ##php_value session.cookie_secure 1
    ## we should check session lifetime in "read" methods
    ## since PHP cookies do not "refresh" them during activity
    ## hence we leave them alive until browser closes
    #php_value session.cookie_lifetime  0
    #php_value session.gc_maxlifetime 6000

    ### Uncomment these lines if you wish to show all errors on the screen.
    ##php_value display_errors 1
    ##php_value error_reporting 2047
    # no php settings set in other configs. plb 12-08-2014

    # enable expirations
    <IfModule mod_expires.c>
      ExpiresActive On
      ExpiresByType image/gif "access plus 1 month"
      ExpiresByType image/png "access plus 1 month"
      ExpiresByType image/jpg "access plus 1 month"
      ExpiresByType image/jpeg "access plus 1 month"
      ExpiresByType image/x-icon "access plus 1 month"
      ExpiresByType text/css "access plus 4 hours"
      ExpiresByType application/javascript "access plus 4 hours"
    </IfModule>

    #Enable deflating (gzip) of content
    <IfModule mod_deflate.c>
      # Insert filter
      SetOutputFilter DEFLATE

      # Netscape 4.x has some problems...
      BrowserMatch ^Mozilla/4 gzip-only-text/html

      # Netscape 4.06-4.08 have some more problems
      BrowserMatch ^Mozilla/4\.0[678] no-gzip

      # MSIE masquerades as Netscape, but it is fine
      # BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

      # NOTE: Due to a bug in mod_setenvif up to Apache 2.0.48
      # the above regex won't work. You can use the following
      # workaround to get the desired effect:
      BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html

      # Don't compress images
      SetEnvIfNoCase Request_URI \
      \.(?:gif|jpe?g|png)$ no-gzip dont-vary
    </IfModule>
  </Directory>
</VirtualHost>

# Anythink Test Server
<VirtualHost *:80>
  ServerName anythink.marmot.org
  # Test instance on Marmot server

  DocumentRoot  "/usr/local/vufind-plus/vufind/web"
  CustomLog     "/var/log/vufind-plus/anythink.test/access.log" combined
  ErrorLog      "/var/log/vufind-plus/anythink.test/error.log"
  ErrorDocument 404 /index.php?method=404
  #marmot test instance

  <Directory "/usr/local/vufind-plus/vufind/web">
    Order allow,deny
    allow from all
    AllowOverride All

    # Uncomment the following lines, if you wish to use the Shibboleth authentication
    # AuthType shibboleth
    # require shibboleth

    # Friendly URLs
    #
    # You may need to adjust the RewriteBase to match your VuFind path.
    # You can remove the line if your vufind instance will be located at the web
    # server root.
    #
    <IfModule mod_rewrite.c>
      RewriteEngine   On

      RewriteRule  ^robots\.txt$ /robots.php [NC,L]

      #Redirect anything still using /vufind to /
      RewriteCond %{THE_REQUEST} ^GET\ /vufind/
      RewriteRule ^vufind/(.*) /$1 [L,R=301]

      RewriteCond %{THE_REQUEST} ^GET\ /MyResearch/

      RewriteRule ^MyResearch/OverdriveHolds /MyAccount/Holds$1 [L,QSA,R=301]
      RewriteRule ^MyResearch/OverdriveCheckedOut /MyAccount/CheckedOut$1 [L,QSA,R=301]
      RewriteRule ^MyResearch/EContentHolds /MyAccount/Holds$1 [L,QSA,R=301]
      RewriteRule ^MyResearch/EContentCheckedOut /MyAccount/CheckedOut$1 [L,QSA,R=301]
      #included 12-8-2014, plb. taken from httpd.opac.marmot.org.conf
      RewriteRule ^MyResearch/(.*) /MyAccount/$1 [L,R=301]


      # Note: The following RewriteRule directives include the [B] flag to escape
      # backreferences.  This prevents encoding problems caused by special characters
      # like & if they show up in ids.  Note that the flag doesn't work in some
      # versions of Apache prior to 2.2.12; if you run into trouble, try upgrading.
      RewriteRule   ^(MyResearch)/([^/]+)/(.+)$   index.php?module=$1&action=$2&id=$3   [B,L,QSA]
      RewriteRule   ^(Record)/([^/]+)/(.+)$       index.php?module=$1&id=$2&action=$3   [B,L,QSA]
      RewriteRule   ^(Record)/(.+)$               index.php?module=$1&id=$2             [B,L,QSA]
      RewriteRule   ^([^/]+)/(.+)$                index.php?module=$1&action=$2         [B,L,QSA]
      RewriteRule   ^(Search)/?$                  index.php?module=$1                   [B,L,QSA]
      # above taken from httpd.opac.marmot.org.conf, below is the orignal set. plb 12-08-2014

      #RewriteRule   ^(MyAccount)/([^/]+)/(.+)$   index.php?module=$1&action=$2&id=$3   [B,L,QSA]
      #RewriteRule   ^(Record|EcontentRecord)/([^/]+)/(.+)$       index.php?module=$1&id=$2&action=$3   [B,L,QSA]
      #RewriteRule   ^(Record|EcontentRecord)/(.+)$               index.php?module=$1&id=$2             [B,L,QSA]
      #RewriteRule   ^(Search)/?$                  index.php?module=$1                   [B,L,QSA]

      ##RewriteCond   %{REQUEST_URI}    !^/?themes
      #RewriteRule   ^([^/]+)/(.+)$                index.php?module=$1&action=$2         [B,L,QSA]
    </IfModule>

    # Disable Magic Quotes
    php_value magic_quotes_gpc false

    ## Session Settings
    #php_value session.use_cookies  1
    #php_value session.use_only_cookies 1
    ## important: we want to serialize objects
    #php_value session.auto_start 0
    ##php_value session.cookie_secure 1
    ## we should check session lifetime in "read" methods
    ## since PHP cookies do not "refresh" them during activity
    ## hence we leave them alive until browser closes
    #php_value session.cookie_lifetime  0
    #php_value session.gc_maxlifetime 6000

    ### Uncomment these lines if you wish to show all errors on the screen.
    ##php_value display_errors 1
    ##php_value error_reporting 2047
  # no php settings set in other configs. plb 12-08-2014

    # enable expirations
    <IfModule mod_expires.c>
      ExpiresActive On
      ExpiresByType image/gif "access plus 1 month"
      ExpiresByType image/png "access plus 1 month"
      ExpiresByType image/jpg "access plus 1 month"
      ExpiresByType image/jpeg "access plus 1 month"
      ExpiresByType image/x-icon "access plus 1 month"
      ExpiresByType text/css "access plus 4 hours"
      ExpiresByType application/javascript "access plus 4 hours"
    </IfModule>

    #Enable deflating (gzip) of content
    <IfModule mod_deflate.c>
      # Insert filter
      SetOutputFilter DEFLATE

      # Netscape 4.x has some problems...
      BrowserMatch ^Mozilla/4 gzip-only-text/html

      # Netscape 4.06-4.08 have some more problems
      BrowserMatch ^Mozilla/4\.0[678] no-gzip

      # MSIE masquerades as Netscape, but it is fine
      # BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

      # NOTE: Due to a bug in mod_setenvif up to Apache 2.0.48
      # the above regex won't work. You can use the following
      # workaround to get the desired effect:
      BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html

      # Don't compress images
      SetEnvIfNoCase Request_URI \
      \.(?:gif|jpe?g|png)$ no-gzip dont-vary
    </IfModule>
  </Directory>
</VirtualHost>
